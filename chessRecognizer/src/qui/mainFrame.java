/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * mainFrame.java
 *
 * Created on 19.01.2012, 23:42:25
 */
package qui;

import chessrecognizer.DBHandler;
import chessrecognizer.Move;
import chessrecognizer.PGNHandler;
import chessrecognizer.Party;
import chessrecognizer.View;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import org.jdesktop.application.Action;

public class mainFrame extends javax.swing.JFrame {

    private static final String TIME_FORMAT = "HH:mm:ss";
    private Party currentParty;
    private DBHandler dbHandler = new DBHandler();
    
    public mainFrame() {
        this.setTitle("Chess Recognizer");
        initComponents();
        dbHandler.externalConnect();
    }
     
    private static String getTime() {
        Calendar calendar = Calendar.getInstance();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(TIME_FORMAT);
        return simpleDateFormat.format(calendar.getTime());
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        chessBoardCanvas = new ChessCanvas();
        panel3 = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        partiesList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        FENsituation = new javax.swing.JTextField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        isFENsearch = new java.awt.Checkbox();
        isEventsearch = new java.awt.Checkbox();
        label6 = new java.awt.Label();
        eventToSearch = new javax.swing.JTextField();
        isDateSearch = new java.awt.Checkbox();
        label7 = new java.awt.Label();
        dateToSearch = new javax.swing.JTextField();
        panel1 = new java.awt.Panel();
        jLabel2 = new javax.swing.JLabel();
        eventLabel = new javax.swing.JLabel();
        siteLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        roundLabel = new javax.swing.JLabel();
        whiteLabel = new javax.swing.JLabel();
        blackLabel = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();
        panel2 = new java.awt.Panel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        movesList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        panel4 = new java.awt.Panel();
        portingInfo = new java.awt.TextArea();
        jButton1 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        isLocalDB = new java.awt.Checkbox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(mainFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        chessBoardCanvas.setName("chessBoardCanvas"); // NOI18N

        panel3.setBackground(resourceMap.getColor("panel3.background")); // NOI18N
        panel3.setName("panel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        partiesList.setName("partiesList"); // NOI18N
        jScrollPane1.setViewportView(partiesList);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(mainFrame.class, this);
        jButton12.setAction(actionMap.get("searchPartiesButtonPressed")); // NOI18N
        jButton12.setText(resourceMap.getString("jButton12.text")); // NOI18N
        jButton12.setName("jButton12"); // NOI18N

        jButton3.setAction(actionMap.get("showParty")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        jButton2.setAction(actionMap.get("refreshPartiesList")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        FENsituation.setText(resourceMap.getString("boardSituationFEN.text")); // NOI18N
        FENsituation.setToolTipText(resourceMap.getString("boardSituationFEN.toolTipText")); // NOI18N
        FENsituation.setName("boardSituationFEN"); // NOI18N

        label1.setName("label1"); // NOI18N

        label2.setName("label2"); // NOI18N
        label2.setText(resourceMap.getString("label2.text")); // NOI18N

        label4.setName("label4"); // NOI18N
        label4.setText(resourceMap.getString("label4.text")); // NOI18N

        label5.setName("label5"); // NOI18N
        label5.setText(resourceMap.getString("label5.text")); // NOI18N

        isFENsearch.setLabel(resourceMap.getString("label")); // NOI18N
        isFENsearch.setName(""); // NOI18N

        isEventsearch.setName("isEventsearch"); // NOI18N

        label6.setName("label6"); // NOI18N
        label6.setText(resourceMap.getString("label6.text")); // NOI18N

        eventToSearch.setText(resourceMap.getString("eventToSearch.text")); // NOI18N
        eventToSearch.setToolTipText(resourceMap.getString("eventToSearch.toolTipText")); // NOI18N
        eventToSearch.setName("eventToSearch"); // NOI18N

        isDateSearch.setName("isDateSearch"); // NOI18N

        label7.setName("label7"); // NOI18N
        label7.setText(resourceMap.getString("label7.text")); // NOI18N

        dateToSearch.setText(resourceMap.getString("dateToSearch.text")); // NOI18N
        dateToSearch.setToolTipText(resourceMap.getString("dateToSearch.toolTipText")); // NOI18N
        dateToSearch.setName("dateToSearch"); // NOI18N

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)))
                            .addComponent(jLabel1)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(FENsituation, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(isFENsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(eventToSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(isEventsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(dateToSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(isDateSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(FENsituation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(isFENsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(eventToSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(isEventsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(dateToSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(isDateSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addGap(19, 19, 19))
        );

        panel1.setBackground(resourceMap.getColor("panel1.background")); // NOI18N
        panel1.setName("panel1"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        eventLabel.setText(resourceMap.getString("eventLabel.text")); // NOI18N
        eventLabel.setName("eventLabel"); // NOI18N

        siteLabel.setText(resourceMap.getString("siteLabel.text")); // NOI18N
        siteLabel.setName("siteLabel"); // NOI18N

        dateLabel.setText(resourceMap.getString("dateLabel.text")); // NOI18N
        dateLabel.setName("dateLabel"); // NOI18N

        roundLabel.setText(resourceMap.getString("roundLabel.text")); // NOI18N
        roundLabel.setName("roundLabel"); // NOI18N

        whiteLabel.setText(resourceMap.getString("whiteLabel.text")); // NOI18N
        whiteLabel.setName("whiteLabel"); // NOI18N

        blackLabel.setText(resourceMap.getString("blackLabel.text")); // NOI18N
        blackLabel.setName("blackLabel"); // NOI18N

        resultLabel.setText(resourceMap.getString("resultLabel.text")); // NOI18N
        resultLabel.setName("resultLabel"); // NOI18N

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(eventLabel)
                    .addComponent(blackLabel)
                    .addComponent(whiteLabel)
                    .addComponent(roundLabel)
                    .addComponent(siteLabel)
                    .addComponent(resultLabel)
                    .addComponent(dateLabel))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eventLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(siteLabel)
                .addGap(7, 7, 7)
                .addComponent(roundLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(whiteLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(blackLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel2.setBackground(resourceMap.getColor("panel2.background")); // NOI18N
        panel2.setName("panel2"); // NOI18N

        jButton9.setAction(actionMap.get("showLastMove")); // NOI18N
        jButton9.setText(resourceMap.getString("jButton9.text")); // NOI18N
        jButton9.setName("jButton9"); // NOI18N

        jButton10.setAction(actionMap.get("showPreviousMove")); // NOI18N
        jButton10.setText(resourceMap.getString("jButton10.text")); // NOI18N
        jButton10.setName("jButton10"); // NOI18N

        jButton11.setAction(actionMap.get("showNextMove")); // NOI18N
        jButton11.setText(resourceMap.getString("jButton11.text")); // NOI18N
        jButton11.setName("jButton11"); // NOI18N

        jButton5.setAction(actionMap.get("showFirstMove")); // NOI18N
        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        movesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        movesList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        movesList.setName("movesList"); // NOI18N
        movesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                movesListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(movesList);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panel4.setBackground(resourceMap.getColor("panel4.background")); // NOI18N
        panel4.setName("panel4"); // NOI18N

        portingInfo.setEditable(false);
        portingInfo.setName("portingInfo"); // NOI18N
        portingInfo.setText(resourceMap.getString("portingInfo.text")); // NOI18N

        jButton1.setAction(actionMap.get("importButtonPressed")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton13.setAction(actionMap.get("exportButtonPressed")); // NOI18N
        jButton13.setText(resourceMap.getString("jButton13.text")); // NOI18N
        jButton13.setName("jButton13"); // NOI18N

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(portingInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(portingInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton1))
                .addGap(26, 26, 26))
        );

        isLocalDB.setLabel(resourceMap.getString("isLocalDB.label")); // NOI18N
        isLocalDB.setName("isLocalDB"); // NOI18N
        isLocalDB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                isLocalDBItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chessBoardCanvas, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isLocalDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chessBoardCanvas, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isLocalDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel4, javax.swing.GroupLayout.Alignment.LEADING, 0, 224, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


private void movesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_movesListValueChanged
    int index = movesList.getSelectedIndex();
    if (index != -1){
        movesList.ensureIndexIsVisible(movesList.getSelectedIndex());
        ChessCanvas tmpCanvas = (ChessCanvas)chessBoardCanvas;
        tmpCanvas.setView(currentParty.getView(index+1));
        chessBoardCanvas.repaint();
    }
}//GEN-LAST:event_movesListValueChanged

private void isLocalDBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_isLocalDBItemStateChanged
    dbHandler.disconnect();
    if (isLocalDB.getState())
        dbHandler.localConnect();
    else
        dbHandler.externalConnect();
}//GEN-LAST:event_isLocalDBItemStateChanged

public static void main(String args[]) {
    
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    private String getFilePathFromBrowser(){
        JFileChooser fileChooser = new JFileChooser();
        int returnedValue = fileChooser.showOpenDialog(this);
        if (returnedValue == JFileChooser.APPROVE_OPTION) 
            return fileChooser.getSelectedFile().getAbsolutePath(); 
        else
            return null;      
    }
    
    private void importFromPGN(String filePath){
        List<Party> parties = PGNHandler.parseParties(filePath);
        for (Party party:parties)
            dbHandler.addParty(party);
    }

    @Action
    public void importButtonPressed() {
        String filePath = getFilePathFromBrowser();
        if (filePath != null) {
            portingInfo.append("\n" + getTime() + " Начинается импорт файла " + filePath);
            try{
                importFromPGN(filePath);
                portingInfo.append("\n" + getTime()+" Импорт файла в базу данных успешно завершен");
            } catch (Exception e){
                portingInfo.append("\n" + getTime()+" К сожалению, при импорте файла произошли ошибки"); 
                portingInfo.append("\n" + e.toString()); 
            }              
        } 
    }
    
    private void showPartiesList(List<Party> parties){
        DefaultListModel<Party> model = new DefaultListModel<Party>();
        
        for (Party party:parties){
            model.add(model.getSize(), party);
        }
        
        partiesList.setModel(model);        
    }

    @Action
    public void refreshPartiesList() {
        List<Party> parties = dbHandler.getPartiesInfo("");
        showPartiesList(parties);
    }
    
    private void setCurrentPartyInfo(){
        eventLabel.setText("Event: " + currentParty.getEvent());
        siteLabel.setText("Site: " + currentParty.getSite());
        dateLabel.setText("Date: " + currentParty.getDate());
        roundLabel.setText("Round: " + currentParty.getRound());
        resultLabel.setText("Result: " + currentParty.getResult());
        whiteLabel.setText("White player: " + currentParty.getWhite());
        blackLabel.setText("Black player: " + currentParty.getBlack());
    }
    
    private Party getPartyFromDB(int id){
        Party party = dbHandler.getFullParty(id); 
        return party;
    }
    
    
    private void addCurrentPartyMovesToList() {
        DefaultListModel<Move> movesModel = new DefaultListModel<Move>();

        for (Move move:currentParty.getMoves())
            movesModel.add(movesModel.getSize(), move);
 
        movesList.setModel(movesModel);
        
        movesList.setSelectedIndex(0);
        
    }

    @Action
    public void showParty() {
        int index = partiesList.getMinSelectionIndex();
        if (index != -1){
            Party party = (Party)partiesList.getModel().getElementAt(index);
            currentParty = getPartyFromDB(party.getId());
            currentParty.generateViews();            
            setCurrentPartyInfo();            
            addCurrentPartyMovesToList();            
        }
    }

    @Action
    public void showFirstMove() {
        movesList.setSelectedIndex(0);
    }

    @Action
    public void showPreviousMove() {
        if (movesList.getSelectedIndex()!=0)
            movesList.setSelectedIndex(movesList.getSelectedIndex()-1);
    }

    @Action
    public void showNextMove() {
        if (movesList.getSelectedIndex()!=currentParty.getMoves().size()-1)
            movesList.setSelectedIndex(movesList.getSelectedIndex()+1);
    }

    @Action
    public void showLastMove() {
        movesList.setSelectedIndex(currentParty.getMoves().size()-1);
    }

    
    public void searchParties(String fen) {
        try{
            View view = new View (fen);
            long [] blob = view.serialize();
            
            
            List<Party> parties = dbHandler.getPartiesInfo(blob);      
            
            showPartiesList(parties);
        } catch (Exception e){          
        }
    }
 
    @Action
    public void searchPartiesButtonPressed() {
        if (!FENsituation.getText().equals("")){
            View view = new View (FENsituation.getText());
            long [] blob = view.serialize();

            List<Party> parties = dbHandler.getPartiesInfo(blob);    
            showPartiesList(parties);
        }
    }

    @Action
    public void exportButtonPressed() {
        
        String filePath = getFilePathFromBrowser();
        int [] selectedIndeces = partiesList.getSelectedIndices();
        portingInfo.append("\n" + getTime() + " Начинается экспорт " + selectedIndeces.length + " партий в файл " + filePath);
        List<Party> parties = new ArrayList<Party>();
        for (int index:selectedIndeces){
            Party party = (Party)partiesList.getModel().getElementAt(index);
            parties.add(dbHandler.getFullParty(party.getId()));
        }
        PGNHandler.createPGNFile(parties, filePath);
        portingInfo.append("\n" + getTime() + " Экспорт завершен ");
        
    }
    

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FENsituation;
    private javax.swing.JLabel blackLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private java.awt.Canvas chessBoardCanvas;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateToSearch;
    private javax.swing.JLabel eventLabel;
    private javax.swing.JTextField eventToSearch;
    private java.awt.Checkbox isDateSearch;
    private java.awt.Checkbox isEventsearch;
    private java.awt.Checkbox isFENsearch;
    private java.awt.Checkbox isLocalDB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private javax.swing.JList movesList;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private java.awt.Panel panel3;
    private java.awt.Panel panel4;
    private javax.swing.JList partiesList;
    private java.awt.TextArea portingInfo;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JLabel roundLabel;
    private javax.swing.JLabel siteLabel;
    private javax.swing.JLabel whiteLabel;
    // End of variables declaration//GEN-END:variables

}
